"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatErrorMessage = formatErrorMessage;
/**
 * Takes in an error and returns a correctly formatted string of its error message.
 * If it is an AggregateError, it will return a string with all the inner errors
 * formatted and separated by a newline.
 *
 * @param error The error to format
 * @returns A string with the error message(s) of the error
 */
function formatErrorMessage(error) {
    if (error && Array.isArray(error.errors)) {
        const innerMessages = error.errors
            .map((innerError) => ((innerError === null || innerError === void 0 ? void 0 : innerError.message) || (innerError === null || innerError === void 0 ? void 0 : innerError.toString())))
            .join('\n');
        return `AggregateError: ${innerMessages}`;
    }
    // Fallback for regular Error or other types
    return (error === null || error === void 0 ? void 0 : error.message) || (error === null || error === void 0 ? void 0 : error.toString()) || 'Unknown error';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LWVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZm9ybWF0LWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBUUEsZ0RBVUM7QUFsQkQ7Ozs7Ozs7R0FPRztBQUNILFNBQWdCLGtCQUFrQixDQUFDLEtBQVU7SUFDM0MsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsTUFBTTthQUMvQixHQUFHLENBQUMsQ0FBQyxVQUFpRCxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUEsVUFBVSxhQUFWLFVBQVUsdUJBQVYsVUFBVSxDQUFFLE9BQU8sTUFBSSxVQUFVLGFBQVYsVUFBVSx1QkFBVixVQUFVLENBQUUsUUFBUSxFQUFFLENBQUEsQ0FBQyxDQUFDO2FBQzNHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNkLE9BQU8sbUJBQW1CLGFBQWEsRUFBRSxDQUFDO0lBQzVDLENBQUM7SUFFRCw0Q0FBNEM7SUFDNUMsT0FBTyxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxPQUFPLE1BQUksS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFFBQVEsRUFBRSxDQUFBLElBQUksZUFBZSxDQUFDO0FBQ2hFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRha2VzIGluIGFuIGVycm9yIGFuZCByZXR1cm5zIGEgY29ycmVjdGx5IGZvcm1hdHRlZCBzdHJpbmcgb2YgaXRzIGVycm9yIG1lc3NhZ2UuXG4gKiBJZiBpdCBpcyBhbiBBZ2dyZWdhdGVFcnJvciwgaXQgd2lsbCByZXR1cm4gYSBzdHJpbmcgd2l0aCBhbGwgdGhlIGlubmVyIGVycm9yc1xuICogZm9ybWF0dGVkIGFuZCBzZXBhcmF0ZWQgYnkgYSBuZXdsaW5lLlxuICpcbiAqIEBwYXJhbSBlcnJvciBUaGUgZXJyb3IgdG8gZm9ybWF0XG4gKiBAcmV0dXJucyBBIHN0cmluZyB3aXRoIHRoZSBlcnJvciBtZXNzYWdlKHMpIG9mIHRoZSBlcnJvclxuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RXJyb3JNZXNzYWdlKGVycm9yOiBhbnkpOiBzdHJpbmcge1xuICBpZiAoZXJyb3IgJiYgQXJyYXkuaXNBcnJheShlcnJvci5lcnJvcnMpKSB7XG4gICAgY29uc3QgaW5uZXJNZXNzYWdlcyA9IGVycm9yLmVycm9yc1xuICAgICAgLm1hcCgoaW5uZXJFcnJvcjogeyBtZXNzYWdlOiBhbnk7IHRvU3RyaW5nOiAoKSA9PiBhbnkgfSkgPT4gKGlubmVyRXJyb3I/Lm1lc3NhZ2UgfHwgaW5uZXJFcnJvcj8udG9TdHJpbmcoKSkpXG4gICAgICAuam9pbignXFxuJyk7XG4gICAgcmV0dXJuIGBBZ2dyZWdhdGVFcnJvcjogJHtpbm5lck1lc3NhZ2VzfWA7XG4gIH1cblxuICAvLyBGYWxsYmFjayBmb3IgcmVndWxhciBFcnJvciBvciBvdGhlciB0eXBlc1xuICByZXR1cm4gZXJyb3I/Lm1lc3NhZ2UgfHwgZXJyb3I/LnRvU3RyaW5nKCkgfHwgJ1Vua25vd24gZXJyb3InO1xufVxuIl19